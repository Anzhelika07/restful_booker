name: API Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Run every Sunday at midnight

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install allure-pytest

    - name: Run API tests
      run: |
        python -m pytest tests/ -v --alluredir=./allure-results -n auto

    - name: Generate Allure report
      run: |
        allure generate ./allure-results -o ./allure-report --clean

    - name: Upload Allure report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report-${{ matrix.python-version }}
        path: ./allure-report
        retention-days: 7

  deploy-report:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all allure reports
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Merge Allure reports
      run: |
        # Создаем директорию для объединенных результатов
        mkdir -p merged-allure-results
        
        # Копируем результаты из всех артефактов
        find artifacts -name "*.json" -exec cp {} merged-allure-results \;
        find artifacts -name "*.txt" -exec cp {} merged-allure-results \;
        find artifacts -name "*.xml" -exec cp {} merged-allure-results \;

    - name: Generate final Allure report
      run: |
        allure generate merged-allure-results -o final-allure-report --clean

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./final-allure-report
        keep_files: true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Send notification on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'API Tests Failed',
            body: 'API tests failed in workflow run: ${{ github.run_id }}'
          })
