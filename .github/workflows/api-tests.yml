name: Run API Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install allure-pytest

      - name: Run API tests
        run: |
          pytest tests/ -v --alluredir=./allure-results

      - name: Download and setup Allure
        run: |
          # Скачиваем Allure командной строки
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -zxvf allure-2.27.0.tgz
          echo "$(pwd)/allure-2.27.0/bin" >> $GITHUB_PATH

      - name: Generate Allure report
        if: always()
        run: |
          allure generate allure-results -o allure-report --clean

      # Загружаем историю Allure Report из специальной ветки gh-pages
      # doc: https://allurereport.org/docs/integrations-github/
      - name: Load test report history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

#      - name: Build test report
#        uses: simple-elf/allure-report-action@v1.7
#        if: always()
#        with:
#          gh_pages: gh-pages
#          allure_history: allure-history
#          allure_results: target/allure-results

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-report